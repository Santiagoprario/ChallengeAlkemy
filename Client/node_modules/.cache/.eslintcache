[{"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/index.js":"1","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/App.js":"2","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/reportWebVitals.js":"3","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Store/index.js":"4","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Reducer/index.js":"5","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Welcome.jsx":"6","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Login.jsx":"7","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Home.jsx":"8","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Form.jsx":"9","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/SignUp.jsx":"10","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Actions/index.js":"11"},{"size":445,"mtime":1634603904152,"results":"12","hashOfConfig":"13"},{"size":663,"mtime":1635466081897,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1634568819581,"results":"15","hashOfConfig":"13"},{"size":321,"mtime":1634604054617,"results":"16","hashOfConfig":"13"},{"size":1192,"mtime":1635465797464,"results":"17","hashOfConfig":"13"},{"size":972,"mtime":1635251327910,"results":"18","hashOfConfig":"13"},{"size":2098,"mtime":1635445969684,"results":"19","hashOfConfig":"13"},{"size":1979,"mtime":1635465546159,"results":"20","hashOfConfig":"13"},{"size":1652,"mtime":1635466208252,"results":"21","hashOfConfig":"13"},{"size":2865,"mtime":1635358151670,"results":"22","hashOfConfig":"13"},{"size":1272,"mtime":1635465247092,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"mtj6qv",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/index.js",[],["51","52"],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/App.js",[],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/reportWebVitals.js",[],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Store/index.js",[],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Reducer/index.js",[],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Welcome.jsx",["53","54"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from 'react-router';\n\nimport styles from './Styles/welcome.module.css';\n\nexport default function Welcome() {\n    \n    const dispatch = useDispatch()\n    const history = useHistory()\n\n\n    return(\n        <>\n           \n            <section className={styles.mainDiv}>\n             <div className={styles.titlecont}>\n                <h3 className={styles.title}>\n                    MR.ECONOMy\n                </h3>\n                </div>\n             <div className={styles.divButtons}>\n                    <Link to='/login'>\n                        <button className={styles.btn}>Ingresar</button>\n                    </Link>\n                    <Link to='/sign-up'>\n                        <button className={styles.btn}>Registrarse</button>\n                    </Link>\n                </div>\n            </section>\n        </>\n    );\n};","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Login.jsx",["55","56"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport styles from './Styles/Login.module.css';\nimport { logIn } from '../Reducer/Actions';\n\n\nexport default function LogIn() {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const logged = window.localStorage.getItem(\"isAuth\");\n  const [isAuth, setIsAuth] = useState(false);\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n  });\n\n\n  const handleInputChange = function(e) {\n    e.preventDefault();\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    dispatch(logIn(state));\n    setTimeout(() => {\n      history.push('home');\n  }, 1000);\n  };\n\n  useEffect(() => {\n    if (logged) {\n      setIsAuth(logged);\n    };\n  }, [logged]);\n\n  return (\n    <>\n      <section className={styles.container}>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <label className={styles.label} htmlFor=\"emailInput\" > Email: </label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={state.email}\n            placeholder=\"Ingresa tu email\"\n            autoComplete=\"off\"\n            className={styles.input}\n            onChange={(e) => handleInputChange(e)}\n          />\n          <label className={styles.label} htmlFor=\"passwordInput\"> Contraseña: </label>\n          <input\n            type='password'\n            id='password'\n            name=\"password\"\n            value={state.password}\n            placeholder=\"Ingresa tu contraseña\"\n            autoComplete=\"off\"\n            className={styles.input}\n            onChange={(e) => handleInputChange(e)}\n          />   \n          <button type=\"submit\" className={styles.button}>Entrar</button>\n          <p className={styles.someText}>¿No tienes cuenta? <Link to='/sign-up'>¡Regístrate!</Link></p>\n\n        </form>\n      </section>\n    </>\n  );\n};\n","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Home.jsx",["57","58","59","60"],"import React from 'react';\nimport styles from './Styles/home.module.css';\nimport { useState , useEffect} from 'react';\nimport Form from './Form';\nimport { useSelector , useDispatch} from 'react-redux';\nimport { getMoves } from '../Reducer/Actions';\n\n\n\nfunction Home() {\n    const dispatch = useDispatch()\n    const amount = 0\n    const name = useSelector(state => state.name)\n    const idUser = useSelector(state => state.id)\n    const moves = useSelector(state => state.moves)\n\n    const [entry, setEntry] = useState({\n        text : true,\n    })\n    const [discharge, setDischarge] = useState({\n        text : true,\n    })\n    const entryText = 'Quiero registrar un ingreso';\n    const dischargeText = 'Quiero registrar un egreso';\n\n    \n\n    const changeformEntry = () => {\n        setDischarge(true)\n        if (entry) {\n        setEntry(false)\n        } else {\n            setEntry(true)   \n        }\n    }\n\n    const changeformDisc = () => {\n        setEntry(true)\n        if (discharge) {\n        setDischarge(false)\n        } else {\n            setDischarge(true)   \n        }\n    }\n    \n    \n    \n    return (\n        <div className={styles.back}>\n           <div className={styles.title}>\n            Hola {name} !\n           </div>\n           <hr/>\n           <div className={styles.balance}>\n               Tu Saldo es : $ {amount}\n           </div>\n           <div className={styles.moves}>\n               <div className={styles.entry}  >\n               {entry ? <h3 onClick={changeformEntry}  className={styles.textTitleMoves}> {entryText} </h3> : <Form option='Ingresos' id={idUser}/>}\n               </div>\n               <div className={styles.discharge}  >\n                   {discharge ? <h3 onClick={changeformDisc} className={styles.textTitleMoves}>{dischargeText} </h3> : <Form option='Egresos' id={idUser}/>}\n                 </div>\n           </div>\n           <div>\n               Consultas\n           </div>\n        </div>\n    )\n}\n\nexport default Home;\n","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Form.jsx",["61"],"import React from 'react';\nimport styles from './Styles/form.module.css';\nimport { useSelector , useDispatch} from 'react-redux';\nimport { useState } from 'react';\nimport { postMoves , getMoves} from '../Reducer/Actions';\n\nfunction Form({option }) {\n    const dispatch = useDispatch()\n    const [state, setState] = useState({\n      name: '',\n      mount: 0,\n      date:''\n    })\n    \n\n    const idUser = useSelector(state => state.id)\n    const title = option\n\n    const handlesubmit = function () {\n      dispatch(postMoves(state,title,idUser))\n    }\n\n   const handleInputChange = function(e) {\n    e.preventDefault();\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n\n    return (\n        <div className={styles.container}>\n        <h3 className={styles.title}>{title}</h3>\n        <hr />\n        <form onSubmit={handlesubmit} className={styles.form}>\n        <input name='name' \n         value={state.name}\n         onChange={(e) => handleInputChange(e)}\n         className={styles.input}\n         type=\"text\"\n         placeholder='Ingrese el concepto...' />\n        <input name='mount'\n         value={state.mount}\n         onChange={(e) => handleInputChange(e)}\n         className={styles.input}\n         type=\"number\" \n         placeholder='Ingrese el monto...'/>\n        <input name='date'\n         onChange={(e) => handleInputChange(e)}\n         value={state.date}\n         className={styles.input}\n         type=\"date\" \n          />\n\n        <button name='submit'\n        className={styles.button}\n        type='submit'>Registrar movimiento</button>\n        </form>\n        </div>\n    )\n}\n\nexport default Form\n","/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/SignUp.jsx",[],"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Reducer/Actions/index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":10,"column":11,"nodeType":"68","messageId":"69","endLine":10,"endColumn":19},{"ruleId":"66","severity":1,"message":"70","line":11,"column":11,"nodeType":"68","messageId":"69","endLine":11,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":3,"column":23,"nodeType":"68","messageId":"69","endLine":3,"endColumn":34},{"ruleId":"66","severity":1,"message":"72","line":15,"column":10,"nodeType":"68","messageId":"69","endLine":15,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":3,"column":21,"nodeType":"68","messageId":"69","endLine":3,"endColumn":30},{"ruleId":"66","severity":1,"message":"74","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":11,"column":11,"nodeType":"68","messageId":"69","endLine":11,"endColumn":19},{"ruleId":"66","severity":1,"message":"75","line":15,"column":11,"nodeType":"68","messageId":"69","endLine":15,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":5,"column":22,"nodeType":"68","messageId":"69","endLine":5,"endColumn":30},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useSelector' is defined but never used.","'isAuth' is assigned a value but never used.","'useEffect' is defined but never used.","'getMoves' is defined but never used.","'moves' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]