{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport styles from './Styles/Login.module.css';\nimport { logIn } from '../Reducer/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EMAIL = /^[^@]+@[^@]+\\.[^@]+$/;\nexport default function LogIn() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const logged = window.localStorage.getItem(\"isAuth\");\n  const [isAuth, setIsAuth] = useState(false);\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    dispatch(logIn(state));\n  }\n\n  ;\n  useEffect(() => {\n    if (logged) {\n      setIsAuth(logged);\n    }\n\n    ;\n  }, [logged]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: \"emailInput\",\n          children: \" Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: state.email,\n          placeholder: \"Ingresa tu email\",\n          autoComplete: \"off\",\n          className: styles.input,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), errors.emailInput && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.danger,\n          children: [\" \", errors.emailInput, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: \"passwordInput\",\n          children: \" Contrase\\xF1a: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: state.password,\n          placeholder: \"Ingresa tu contrase\\xF1a\",\n          autoComplete: \"off\",\n          className: styles.input,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.someText,\n          children: [\"\\xBFNo tienes cuenta? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/sign-up\",\n            children: \"\\xA1Reg\\xEDstrate!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogIn, \"+SVdF8F3KcJxtoE6HSjUmxRTr2U=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = LogIn;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/Alkemy/Client/challenge-alkemy/src/Components/Login.jsx"],"names":["useEffect","useState","useHistory","useDispatch","useSelector","Link","styles","logIn","EMAIL","LogIn","dispatch","history","logged","window","localStorage","getItem","isAuth","setIsAuth","state","setState","email","password","handleChange","event","name","value","target","handleSubmit","preventDefault","container","form","label","input","errors","emailInput","danger","button","someText"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport styles from './Styles/Login.module.css';\nimport { logIn } from '../Reducer/Actions';\n\n\nconst EMAIL = /^[^@]+@[^@]+\\.[^@]+$/;\n\n\nexport default function LogIn() {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const logged = window.localStorage.getItem(\"isAuth\");\n  const [isAuth, setIsAuth] = useState(false);\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n  });\n\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    dispatch(logIn(state));\n  };\n\n  useEffect(() => {\n    if (logged) {\n      setIsAuth(logged);\n    };\n  }, [logged]);\n\n  return (\n    <>\n      <section className={styles.container}>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <label className={styles.label} htmlFor=\"emailInput\" > Email: </label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={state.email}\n            placeholder=\"Ingresa tu email\"\n            autoComplete=\"off\"\n            className={styles.input}\n            onChange={handleChange}\n          />\n          {errors.emailInput && (<p className={styles.danger}> {errors.emailInput} </p>)}\n          <label className={styles.label} htmlFor=\"passwordInput\"> Contraseña: </label>\n          <input\n            type='password'\n            id='password'\n            name=\"password\"\n            value={state.password}\n            placeholder=\"Ingresa tu contraseña\"\n            autoComplete=\"off\"\n            className={styles.input}\n            onChange={handleChange}\n          />   \n          <button type=\"submit\" className={styles.button}>Entrar</button>\n          <p className={styles.someText}>¿No tienes cuenta? <Link to='/sign-up'>¡Regístrate!</Link></p>\n\n        </form>\n      </section>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}